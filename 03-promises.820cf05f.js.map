{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,gBACnCE,UAAWH,SAASC,cAAc,eAClCG,OAAQJ,SAASC,cAAc,iBAC/BI,SAAUL,SAASC,cAAc,iBAoBnC,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAE3BC,YAAW,WACLN,EAEFI,EAAQ,CAAEN,SAAUA,EAAUC,MAAOA,IAIrCM,EAAO,CAAEP,SAAUA,EAAUC,MAAOA,MAErCA,MAIP,SAASQ,EAAYC,G,IAACV,EAADU,EAACV,SAASC,EAAVS,EAAUT,MAC3BU,EAAAtB,GAASuB,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,OACpEc,QAAMC,IAAI,uBAAwCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,OAG7D,SAASgB,EAAWP,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC7BU,EAAAtB,GAASuB,OAAOM,QAAQ,sBAAuCJ,OAAfd,EAAS,QAAYc,OAANb,EAAM,OACnEc,QAAMC,IAAI,sBAAqCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,OA1C3DV,EAAKC,KAAK2B,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBAMJ,IAJA,IAAIpB,EAAQqB,OAAO/B,EAAKI,WAAW4B,OAC7BC,EAAiBF,OAAO/B,EAAKK,UAAU2B,OACvCE,EAAcH,OAAO/B,EAAKM,OAAO0B,OAE9BG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrC3B,EAAc2B,EAAGzB,GACd0B,KAAKlB,GACLmB,MAAMX,GACPhB,GAASuB,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('[name=delay]'),\n  delayStep: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n  startBtn: document.querySelector('.form button'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) { \n  evt.preventDefault();\n\n  let delay = Number(refs.firstDelay.value);\n  const delayStepValue = Number(refs.delayStep.value);\n  const amountValue = Number(refs.amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delay)\n      .then(onFulfilled)\n      .catch(onRejected)\n      delay += delayStepValue;\n }\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position: position, delay: delay });\n      }\n      else {\n        // Reject\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFulfilled({position,delay}) {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n  \n function onRejected({ position, delay }){\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  };"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","firstDelay","delayStep","amount","startBtn","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$onFulfilled","param","$parcel$interopDefault","Notify","success","concat","console","log","$ce04d3a99e08e73b$var$onRejected","failure","addEventListener","evt","preventDefault","Number","value","delayStepValue","amountValue","i","then","catch"],"version":3,"file":"03-promises.820cf05f.js.map"}