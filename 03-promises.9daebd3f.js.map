{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,gBACnCE,UAAWH,SAASC,cAAc,eAClCG,OAAQJ,SAASC,cAAc,iBAC/BI,SAAUL,SAASC,cAAc,iBAoBnC,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KACLN,EAEFI,EAAQ,CAAEN,SAAUA,EAAUC,MAAOA,IAIrCM,EAAO,CAAEP,SAAUA,EAAUC,MAAOA,MAErCA,MAIP,SAASQ,GAAYT,SAACA,EAAQC,MAACA,IAC3BS,EAAArB,GAASsB,OAAOC,QAAQ,uBAAqBZ,QAAiBC,OAC5DY,QAAMC,IAAI,uBAAqBd,QAAiBC,OAGrD,SAASc,GAAWf,SAAEA,EAAQC,MAAEA,IAC7BS,EAAArB,GAASsB,OAAOK,QAAQ,sBAAoBhB,QAAiBC,OAC3DY,QAAMC,IAAI,sBAAoBd,QAAeC,OA1CnDV,EAAKC,KAAKyB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAIlB,EAAQmB,OAAO7B,EAAKI,WAAW0B,OACnC,MAAMC,EAAiBF,OAAO7B,EAAKK,UAAUyB,OACvCE,EAAcH,OAAO7B,EAAKM,OAAOwB,OAEvC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCzB,EAAcyB,EAAGvB,GACdwB,KAAKhB,GACLiB,MAAMX,GACPd,GAASqB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('[name=delay]'),\n  delayStep: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n  startBtn: document.querySelector('.form button'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) { \n  evt.preventDefault();\n\n  let delay = Number(refs.firstDelay.value);\n  const delayStepValue = Number(refs.delayStep.value);\n  const amountValue = Number(refs.amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delay)\n      .then(onFulfilled)\n      .catch(onRejected)\n      delay += delayStepValue;\n }\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position: position, delay: delay });\n      }\n      else {\n        // Reject\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFulfilled({position,delay}) {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n  \n function onRejected({ position, delay }){\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  };"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","firstDelay","delayStep","amount","startBtn","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$onFulfilled","$parcel$interopDefault","Notify","success","console","log","$47d4ff9957288465$var$onRejected","failure","addEventListener","evt","preventDefault","Number","value","delayStepValue","amountValue","i","then","catch"],"version":3,"file":"03-promises.9daebd3f.js.map"}